// Auto-generated. Do not edit!

// (in-package lcm_to_ros.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class vicon_pose_lcmt {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.translation = null;
      this.rotation = null;
      this.seq = null;
      this.stamp_secs = null;
      this.stamp_nsecs = null;
    }
    else {
      if (initObj.hasOwnProperty('translation')) {
        this.translation = initObj.translation
      }
      else {
        this.translation = new Array(3).fill(0);
      }
      if (initObj.hasOwnProperty('rotation')) {
        this.rotation = initObj.rotation
      }
      else {
        this.rotation = new Array(4).fill(0);
      }
      if (initObj.hasOwnProperty('seq')) {
        this.seq = initObj.seq
      }
      else {
        this.seq = 0;
      }
      if (initObj.hasOwnProperty('stamp_secs')) {
        this.stamp_secs = initObj.stamp_secs
      }
      else {
        this.stamp_secs = 0;
      }
      if (initObj.hasOwnProperty('stamp_nsecs')) {
        this.stamp_nsecs = initObj.stamp_nsecs
      }
      else {
        this.stamp_nsecs = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type vicon_pose_lcmt
    // Check that the constant length array field [translation] has the right length
    if (obj.translation.length !== 3) {
      throw new Error('Unable to serialize array field translation - length must be 3')
    }
    // Serialize message field [translation]
    bufferOffset = _arraySerializer.float32(obj.translation, buffer, bufferOffset, 3);
    // Check that the constant length array field [rotation] has the right length
    if (obj.rotation.length !== 4) {
      throw new Error('Unable to serialize array field rotation - length must be 4')
    }
    // Serialize message field [rotation]
    bufferOffset = _arraySerializer.float32(obj.rotation, buffer, bufferOffset, 4);
    // Serialize message field [seq]
    bufferOffset = _serializer.int32(obj.seq, buffer, bufferOffset);
    // Serialize message field [stamp_secs]
    bufferOffset = _serializer.int32(obj.stamp_secs, buffer, bufferOffset);
    // Serialize message field [stamp_nsecs]
    bufferOffset = _serializer.int32(obj.stamp_nsecs, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type vicon_pose_lcmt
    let len;
    let data = new vicon_pose_lcmt(null);
    // Deserialize message field [translation]
    data.translation = _arrayDeserializer.float32(buffer, bufferOffset, 3)
    // Deserialize message field [rotation]
    data.rotation = _arrayDeserializer.float32(buffer, bufferOffset, 4)
    // Deserialize message field [seq]
    data.seq = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [stamp_secs]
    data.stamp_secs = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [stamp_nsecs]
    data.stamp_nsecs = _deserializer.int32(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 40;
  }

  static datatype() {
    // Returns string type for a message object
    return 'lcm_to_ros/vicon_pose_lcmt';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'e876672954d3cd3f52e018ddac27add5';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    #######################################################################
    # This message was automatically generated by the lcm_to_ros package
    # https://github.com/nrjl/lcm_to_ros, nicholas.lawrance@oregonstate.edu
    #######################################################################
    #
    # Source message:    .msg
    # Creation:          Fri Apr 16 18:27:01 2021
    #
    #######################################################################
    float32[3]          translation
    float32[4]          rotation
                        
    int32               seq
    int32               stamp_secs
    int32               stamp_nsecs
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new vicon_pose_lcmt(null);
    if (msg.translation !== undefined) {
      resolved.translation = msg.translation;
    }
    else {
      resolved.translation = new Array(3).fill(0)
    }

    if (msg.rotation !== undefined) {
      resolved.rotation = msg.rotation;
    }
    else {
      resolved.rotation = new Array(4).fill(0)
    }

    if (msg.seq !== undefined) {
      resolved.seq = msg.seq;
    }
    else {
      resolved.seq = 0
    }

    if (msg.stamp_secs !== undefined) {
      resolved.stamp_secs = msg.stamp_secs;
    }
    else {
      resolved.stamp_secs = 0
    }

    if (msg.stamp_nsecs !== undefined) {
      resolved.stamp_nsecs = msg.stamp_nsecs;
    }
    else {
      resolved.stamp_nsecs = 0
    }

    return resolved;
    }
};

module.exports = vicon_pose_lcmt;
